---
- name: Vultr | Create VM
  local_action:
    module: vr_server
    state: present
    name: "{{ vultr_hostname }}"
    os: "{{ vultr_os }}"
    plan: "{{ vultr_plan }}"
    region: "{{ vultr_region }}"
    auto_backup_enabled: no
    private_network_enabled: yes
    ssh_key: "{{ vultr_key }}"
  register: response

- name: Vultr | Setup ssh host
  set_fact:
    ansible_host: "{{ response.vultr_server.v4_main_ip }}"
    vm_info: "{{ response.vultr_server }}"

- name: Vultr | Wait for ready
  local_action:
    module: wait_for
    host: "{{ ansible_host }}"
    port: 22
    delay: 10

  # Initialize tasks when vm created
- block:
  - debug: msg="{{ vm_info }}"

  - name: Vultr | Install python2
    raw: apt-get --yes install python python-simplejson

  - name: Vultr | Setup hostname
    raw: hostnamectl set-hostname "{{ inventory_hostname }}"

  - name: Vultr | Get mac address of private network device
    raw: cat /sys/class/net/{{ vultr_private_device }}/address
    register: private_mac
  - set_fact:
      vultr_private_mac: "{{ private_mac.stdout }}"
      vultr_private_ip: "{{ vm_info.internal_ip }}"

  - name: Vultr | Configure private network
    template:
      src: private_nw.yml.j2
      dest: /etc/netplan/10-{{ vultr_private_device }}.yaml
      owner: root
      group: root
      mode: 0644

  - name: Vultr | Apply private network setting
    raw: netplan apply
  when: response.changed
